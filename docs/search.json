[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 youtubeFunction authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/Intro_to_youtubeFunction.html","id":"functions-included-for-this-package","dir":"Articles","previous_headings":"","what":"Functions included for this package:","title":"Introduction to youtubeFunction","text":"read_raw_data() bind_tables() read_uncleaned_data() wrangling_data() fit_regression()","code":"library(youtubeFunction) #> Loading required package: tidyverse #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.1     ✔ readr     2.1.4 #> ✔ forcats   1.0.0     ✔ stringr   1.5.0 #> ✔ ggplot2   3.4.1     ✔ tibble    3.2.1 #> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0 #> ✔ purrr     1.0.1      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors"},{"path":"/articles/Intro_to_youtubeFunction.html","id":"read_raw_data","dir":"Articles","previous_headings":"","what":"read_raw_data( )","title":"Introduction to youtubeFunction","text":"function reads URL specific data sets project repository Github absolute path data files stored Docker container: #### example reading raw data sets 2007 YouTube data project repository #### example reading raw data sets 2007 YouTube data Docker container","code":"## This example reads the raw data sets for 2007 YouTube data ## saved on our Github repository table0007 <- read_raw_data(\"https://raw.githubusercontent.com/DSCI-310/dsci-310-group-13/main/data/0007.txt\") table0107 <- read_raw_data(\"https://raw.githubusercontent.com/DSCI-310/dsci-310-group-13/main/data/0107.txt\") table0207 <- read_raw_data(\"https://raw.githubusercontent.com/DSCI-310/dsci-310-group-13/main/data/0207.txt\") table0307 <- read_raw_data(\"https://raw.githubusercontent.com/DSCI-310/dsci-310-group-13/main/data/0307.txt\") ## \"/home/rstudio/data/\" is the absolute path for the data folder ## in our container  ## table0007 <- read_raw_data(\"/home/rstudio/data/0007.txt\") ## table0107 <- read_raw_data(\"/home/rstudio/data/0107.txt\") ## table0207 <- read_raw_data(\"/home/rstudio/data/0207.txt\") ## table0307 <- read_raw_data(\"/home/rstudio/data/0307.txt\")"},{"path":"/articles/Intro_to_youtubeFunction.html","id":"bind_tables","dir":"Articles","previous_headings":"","what":"bind_tables( )","title":"Introduction to youtubeFunction","text":"function takes four tables contains Youtube data one year, binds one table, omit rows NA:","code":"library(youtubeFunction) ## This examples binds tables that contains YouTube data for 2007 into one table  data2007_uncleaned <- bind_tables(table0007,table0107,table0207, table0307)  ## change the column names of the dataset to meaningful ones youtube_col_names <- c(\"Video ID\", \"uploader\", \"age\", 'category','length',                        'views','rate','ratings','comments','related IDs') colnames(data2007_uncleaned) <- youtube_col_names  ## show the first five rows of the raw data for 2007 with changed column names head(data2007_uncleaned) #>      Video ID        uploader age        category length   views rate ratings #> 1 82-FJyniP7A     blahinsider 807   Entertainment     28 1393810 4.16    1397 #> 2 x30kYRp6Y68         oskar79 808 News & Politics    133  208383 3.47     318 #> 3 Gh9VeIjkuNY         jonghea 807  People & Blogs     28  135882 3.89      92 #> 4 ZcuiMTpIIw4          anwad1 807     Howto & DIY     41  153590 1.58    2074 #> 5 SqmlS_lvs8Q     maratontube 807          Sports     99   92520 2.32      78 #> 6 CbY9wnf7WlQ NiggaTubeDotCom 807   Entertainment     28  115085 3.73      84 #>   comments related IDs          NA          NA          NA          NA #> 1     2888 fyatIukPXp0 lgTXaCfmnQc CUtLBzJr_xk 9pUPGc6QyiY 2YXpIlh5148 #> 2      769 BPYDOam_qec ZHFY0u4n-bw e99wLCb8qoA DwrZHZbuvsk QLhuVxrqvAY #> 3      276 U_1mBp8NXuc 2YXpIlh5148 47-0qdkS5Qs x30kYRp6Y68 Dlzoq8ctCWc #> 4     1230 3kwdEyAXd1s 85b1eI8UsDU uva8TAKMlBE EyrcxLu6ctg -XQu7jP1cDc #> 5      155 OVm8xhnCLTU xIt__cWB_S0 58e7Rysge_Q 6FoX6ubW3wA SQEjNPZRrx4 #> 6      207 bjqTO5R3Drk 41hONevXuMY hhVhB4ylXMI 8bb5xsA1EYs yTDwxhK4I3w #>            NA          NA          NA          NA          NA          NA #> 1 heMz4hcGaWI UsFIDJqIAL8 TUVr5GmPY1c OwZFa2XbnYw XtImEoglFmI arhWMhIn4cY #> 2 cdzbI1BRS-0 2uhlJ67YaIw qi4Yj1qwY6M fmmUV1z8n2s geFi5nq9nqM 5jXi32eCuCE #> 3 lSpJNgi2l-g DWOzNjoQZbc Nom2z4HeAj0 dWfLsaF6KRw jI85JohIl3c tVNxinqJBgk #> 4 1uBjnyflEy0 xATzaBPmD8w X1bPuU8WtLU JZDFtAm7mE0 6r3ABJ54Y68 5am8jSaap-s #> 5 1GRJNOvW3K0 OjBy3b4ZaHI u2VxXrrUwOc Bjbg526sdeg UnNntSjgWHk LIfE7p3r9_g #> 6 ZYuIYNaKynI Zt5-wn3fvlw 4ikH9ZRcF2Q 46wakJ8oggM RXVBoiSTqVw YiSFxDJQU48 #>            NA          NA          NA          NA          NA          NA #> 1 Gh9VeIjkuNY TMd2cYS3sjs i7IRP9ZkyT0 k6KV_HfdayI 1Q8fvpcGyv4 p44ttd-T1nY #> 2 gHzK4gvsmJs bBrqJp4bD1c R-yPX6IbgiU oYj6TceYio0 enwo1jWsxFE H3dkH34wHJs #> 3 -dfJI_SL_cU geFi5nq9nqM uIsxOpufz3c kGOQQt_qZZA vfnY__WKPPk 1AgmFNnJT0U #> 4 S9Sk46J8KHg 5v7Q2hYDaac X5-jxD-xGFM yiSArFW2p_c ISfaeQw9ReQ 3ZZHIP4X9uw #> 5 bPM7ZXK_aas yu6-lR6vsZc nYxdA1A0cjQ eK_3KacnZ34 r2Yz-70cFVE _T_gh8YnTTY #> 6 og2Nj6hFGF4 AFc3OWZWyxM qM6vzMpf-GI _ZOxaBW3Xn8 YyqEjatCSe0 lHSiqQpg7Uc #>            NA          NA          NA #> 1 dWfLsaF6KRw kGOQQt_qZZA uIsxOpufz3c #> 2 8WsF5xF7YhU FpBoo0-GrKE PDn7tmsldg8 #> 3 hKVAQZo5Q18 ozvW5nNQQR0 hwap0gtiABQ #> 4 LiOg5wJDUrM vRPyDDFcgno mf-gnYxeRRM #> 5 KAlZkXI7Szg sPW-GaeaMZY eOg2hVp_zFc #> 6 DVEnPIxJJYo hhfhgbmZe9s 3hWnA2dgE-M"},{"path":"/articles/Intro_to_youtubeFunction.html","id":"read_uncleaned_data","dir":"Articles","previous_headings":"","what":"read_uncleaned_data( )","title":"Introduction to youtubeFunction","text":"function takes absolute path read saved uncleaned data set load.R, reads raw data tables, combines tables based year data belongs , write txt files container, example:","code":"## This is an example of how read_uncleaned_data() is used in the container ## where \"/home/rstudio/data/\" is the path to where the uncleaned data is saved in the container  ## data2007_uncleaned <- youtubeFunction::read_uncleaned_data(\"/home/rstudio/data/data2007_not_cleaned.txt\")"},{"path":"/articles/Intro_to_youtubeFunction.html","id":"wrangling_data","dir":"Articles","previous_headings":"","what":"wrangling_data( )","title":"Introduction to youtubeFunction","text":"function takes uncleaned youtube data set tidies data set contains “age”, “category”, “length”, “views”, “rate”, “ratings”, “comments” columns. instance:","code":"## This is an example of using wrangling_data() to tidy up the  ## uncleaned YouTube data for 2007 data2007 <- youtubeFunction::wrangling_data(data2007_uncleaned) head(data2007) #>   age        category length   views rate ratings comments #> 1 807   Entertainment     28 1393810 4.16    1397     2888 #> 2 808 News & Politics    133  208383 3.47     318      769 #> 3 807  People & Blogs     28  135882 3.89      92      276 #> 4 807     Howto & DIY     41  153590 1.58    2074     1230 #> 5 807          Sports     99   92520 2.32      78      155 #> 6 807   Entertainment     28  115085 3.73      84      207"},{"path":"/articles/Intro_to_youtubeFunction.html","id":"fit_regression","dir":"Articles","previous_headings":"","what":"fit_regression( )","title":"Introduction to youtubeFunction","text":"following R chunk prepossesses data set splits data train data test data, train data used fit model used prediction. function fit_regression() takes training data fits simple linear regression chosen columns response variable views.","code":"datareduced <- data2007 |>  select(c(views,age,ratings,comments)) split <- rsample::initial_split(datareduced, prop = 3/4, strata = views) train <- rsample::training(split) test <- rsample::testing(split) lm_fit <- fit_regression(train) lm_fit  #> ══ Workflow [trained] ══════════════════════════════════════════════════════════ #> Preprocessor: Recipe #> Model: linear_reg() #>  #> ── Preprocessor ──────────────────────────────────────────────────────────────── #> 0 Recipe Steps #>  #> ── Model ─────────────────────────────────────────────────────────────────────── #>  #> Call: #> stats::lm(formula = ..y ~ ., data = data) #>  #> Coefficients: #> (Intercept)          age      ratings     comments   #>    14168.82       -18.29       240.00        40.46"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Chris Cai. Author, maintainer. Maggie Dong. Author. Billy Jia. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cai C, Dong M, Jia B (2023). youtubeFunction: Functions Supports Creating Report Youtube Data Set. R package version 1.0.0.","code":"@Manual{,   title = {youtubeFunction: Functions That Supports Creating the Report of Youtube Data Set},   author = {Chris Cai and Maggie Dong and Billy Jia},   year = {2023},   note = {R package version 1.0.0}, }"},{"path":[]},{"path":"/index.html","id":"youtubefunction-100","dir":"","previous_headings":"","what":"youtubeFunction (1.0.0)","title":"Functions That Supports Creating the Report of Youtube Data Set","text":"goal youtubeFunction build functions used DSCI-310 group 13 term project instead using repetitive lines codes. functions package built functions packages, tidyverse, dplyr, parsnip, workflows, etc. functions similar abilities built-functions; however, specific functionalities, : reading specific data container built, cleaning data specific way, fit model specific workflow. Therefore, package may practical project.","code":""},{"path":"/index.html","id":"functions-included","dir":"","previous_headings":"","what":"Functions included:","title":"Functions That Supports Creating the Report of Youtube Data Set","text":"read_raw_data() bind_tables() read_uncleaned_data() wrangling_data() fit_regression()","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Functions That Supports Creating the Report of Youtube Data Set","text":"can install development version youtubeFunction GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"DSCI-310/dsci-310-group-13-pkg\")"},{"path":[]},{"path":"/index.html","id":"read_raw_data","dir":"","previous_headings":"Usage","what":"read_raw_data()","title":"Functions That Supports Creating the Report of Youtube Data Set","text":"function read_raw_data() read URL specific data sets project repository Github absolute path data files stored Docker container:","code":"library(youtubeFunction) ## This example reads the raw data sets for 2007 YouTube data table0007 <- read_raw_data(\"https://raw.githubusercontent.com/DSCI-310/dsci-310-group-13/main/data/0007.txt\") table0107 <- read_raw_data(\"https://raw.githubusercontent.com/DSCI-310/dsci-310-group-13/main/data/0107.txt\") table0207 <- read_raw_data(\"https://raw.githubusercontent.com/DSCI-310/dsci-310-group-13/main/data/0207.txt\") table0307 <- read_raw_data(\"https://raw.githubusercontent.com/DSCI-310/dsci-310-group-13/main/data/0307.txt\")"},{"path":"/index.html","id":"bind_tables","dir":"","previous_headings":"Usage","what":"bind_tables()","title":"Functions That Supports Creating the Report of Youtube Data Set","text":"function bind_tables() takes four tables contains Youtube data one year, binds one table, omit rows NA:","code":"library(youtubeFunction) ## This examples binds tables that contains YouTube data for 2007 into one table  data2007_uncleaned <- bind_tables(table0007,table0107,table0207, table0307)  ## change the column names of the dataset to meaningful ones youtube_col_names <- c(\"Video ID\", \"uploader\", \"age\", 'category','length',                        'views','rate','ratings','comments','related IDs') colnames(data2007_uncleaned) <- youtube_col_names  ## show the first five rows of the raw data for 2007 with changed column names head(data2007_uncleaned) #>      Video ID        uploader age        category length   views rate ratings #> 1 82-FJyniP7A     blahinsider 807   Entertainment     28 1393810 4.16    1397 #> 2 x30kYRp6Y68         oskar79 808 News & Politics    133  208383 3.47     318 #> 3 Gh9VeIjkuNY         jonghea 807  People & Blogs     28  135882 3.89      92 #> 4 ZcuiMTpIIw4          anwad1 807     Howto & DIY     41  153590 1.58    2074 #> 5 SqmlS_lvs8Q     maratontube 807          Sports     99   92520 2.32      78 #> 6 CbY9wnf7WlQ NiggaTubeDotCom 807   Entertainment     28  115085 3.73      84 #>   comments related IDs          NA          NA          NA          NA #> 1     2888 fyatIukPXp0 lgTXaCfmnQc CUtLBzJr_xk 9pUPGc6QyiY 2YXpIlh5148 #> 2      769 BPYDOam_qec ZHFY0u4n-bw e99wLCb8qoA DwrZHZbuvsk QLhuVxrqvAY #> 3      276 U_1mBp8NXuc 2YXpIlh5148 47-0qdkS5Qs x30kYRp6Y68 Dlzoq8ctCWc #> 4     1230 3kwdEyAXd1s 85b1eI8UsDU uva8TAKMlBE EyrcxLu6ctg -XQu7jP1cDc #> 5      155 OVm8xhnCLTU xIt__cWB_S0 58e7Rysge_Q 6FoX6ubW3wA SQEjNPZRrx4 #> 6      207 bjqTO5R3Drk 41hONevXuMY hhVhB4ylXMI 8bb5xsA1EYs yTDwxhK4I3w #>            NA          NA          NA          NA          NA          NA #> 1 heMz4hcGaWI UsFIDJqIAL8 TUVr5GmPY1c OwZFa2XbnYw XtImEoglFmI arhWMhIn4cY #> 2 cdzbI1BRS-0 2uhlJ67YaIw qi4Yj1qwY6M fmmUV1z8n2s geFi5nq9nqM 5jXi32eCuCE #> 3 lSpJNgi2l-g DWOzNjoQZbc Nom2z4HeAj0 dWfLsaF6KRw jI85JohIl3c tVNxinqJBgk #> 4 1uBjnyflEy0 xATzaBPmD8w X1bPuU8WtLU JZDFtAm7mE0 6r3ABJ54Y68 5am8jSaap-s #> 5 1GRJNOvW3K0 OjBy3b4ZaHI u2VxXrrUwOc Bjbg526sdeg UnNntSjgWHk LIfE7p3r9_g #> 6 ZYuIYNaKynI Zt5-wn3fvlw 4ikH9ZRcF2Q 46wakJ8oggM RXVBoiSTqVw YiSFxDJQU48 #>            NA          NA          NA          NA          NA          NA #> 1 Gh9VeIjkuNY TMd2cYS3sjs i7IRP9ZkyT0 k6KV_HfdayI 1Q8fvpcGyv4 p44ttd-T1nY #> 2 gHzK4gvsmJs bBrqJp4bD1c R-yPX6IbgiU oYj6TceYio0 enwo1jWsxFE H3dkH34wHJs #> 3 -dfJI_SL_cU geFi5nq9nqM uIsxOpufz3c kGOQQt_qZZA vfnY__WKPPk 1AgmFNnJT0U #> 4 S9Sk46J8KHg 5v7Q2hYDaac X5-jxD-xGFM yiSArFW2p_c ISfaeQw9ReQ 3ZZHIP4X9uw #> 5 bPM7ZXK_aas yu6-lR6vsZc nYxdA1A0cjQ eK_3KacnZ34 r2Yz-70cFVE _T_gh8YnTTY #> 6 og2Nj6hFGF4 AFc3OWZWyxM qM6vzMpf-GI _ZOxaBW3Xn8 YyqEjatCSe0 lHSiqQpg7Uc #>            NA          NA          NA #> 1 dWfLsaF6KRw kGOQQt_qZZA uIsxOpufz3c #> 2 8WsF5xF7YhU FpBoo0-GrKE PDn7tmsldg8 #> 3 hKVAQZo5Q18 ozvW5nNQQR0 hwap0gtiABQ #> 4 LiOg5wJDUrM vRPyDDFcgno mf-gnYxeRRM #> 5 KAlZkXI7Szg sPW-GaeaMZY eOg2hVp_zFc #> 6 DVEnPIxJJYo hhfhgbmZe9s 3hWnA2dgE-M"},{"path":"/index.html","id":"read_uncleaned_data","dir":"","previous_headings":"Usage","what":"read_uncleaned_data()","title":"Functions That Supports Creating the Report of Youtube Data Set","text":"function read_uncleaned_data() takes absolute path read saved uncleaned data set load.R, reads raw data tables, combines tables based year data belongs , write txt files container, example:","code":"## This is an example of how read_uncleaned_data() is used in the container ## where \"/home/rstudio/data/\" is the path to where the uncleaned data is saved in the container  ## data2007_uncleaned <- youtubeFunction::read_uncleaned_data(\"/home/rstudio/data/data2007_not_cleaned.txt\")"},{"path":"/index.html","id":"wrangling_data","dir":"","previous_headings":"Usage","what":"wrangling_data()","title":"Functions That Supports Creating the Report of Youtube Data Set","text":"function wrangling_data() takes uncleaned youtube data set tidies data set contains “age”, “category”, “length”, “views”, “rate”, “ratings”, “comments” columns. instance:","code":"## This is an example of using wrangling_data() to tidy up the  ## uncleaned YouTube data for 2007 data2007 <- youtubeFunction::wrangling_data(data2007_uncleaned) head(data2007) #>   age        category length   views rate ratings comments #> 1 807   Entertainment     28 1393810 4.16    1397     2888 #> 2 808 News & Politics    133  208383 3.47     318      769 #> 3 807  People & Blogs     28  135882 3.89      92      276 #> 4 807     Howto & DIY     41  153590 1.58    2074     1230 #> 5 807          Sports     99   92520 2.32      78      155 #> 6 807   Entertainment     28  115085 3.73      84      207"},{"path":"/index.html","id":"fit_regression","dir":"","previous_headings":"Usage","what":"fit_regression()","title":"Functions That Supports Creating the Report of Youtube Data Set","text":"following R chunk prepossesses data set splits data train data test data, train data used fit model used prediction. function fit_regression() takes training data fits simple linear regression chosen columns response variable views.","code":"datareduced <- data2007 |>  select(c(views,age,ratings,comments)) split <- rsample::initial_split(datareduced, prop = 3/4, strata = views) train <- rsample::training(split) test <- rsample::testing(split) lm_fit <- fit_regression(train) lm_fit  #> ══ Workflow [trained] ══════════════════════════════════════════════════════════ #> Preprocessor: Recipe #> Model: linear_reg() #>  #> ── Preprocessor ──────────────────────────────────────────────────────────────── #> 0 Recipe Steps #>  #> ── Model ─────────────────────────────────────────────────────────────────────── #>  #> Call: #> stats::lm(formula = ..y ~ ., data = data) #>  #> Coefficients: #> (Intercept)          age      ratings     comments   #>    14871.03       -19.26       223.47        66.62"},{"path":"/reference/bind_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"This function combines all the raw data tables that contains raw data in one\nyear and remove all rows with NA in the table — bind_tables","title":"This function combines all the raw data tables that contains raw data in one\nyear and remove all rows with NA in the table — bind_tables","text":"function combines raw data tables contains raw data one year remove rows NA table","code":""},{"path":"/reference/bind_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function combines all the raw data tables that contains raw data in one\nyear and remove all rows with NA in the table — bind_tables","text":"","code":"bind_tables(t1, t2, t3, t4)"},{"path":"/reference/bind_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function combines all the raw data tables that contains raw data in one\nyear and remove all rows with NA in the table — bind_tables","text":"t1 first raw data table combined t2 second raw data table combined t3 third raw data table combined t4 fourth raw data table combined","code":""},{"path":"/reference/bind_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function combines all the raw data tables that contains raw data in one\nyear and remove all rows with NA in the table — bind_tables","text":"data frame contains raw data one year","code":""},{"path":"/reference/bind_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function combines all the raw data tables that contains raw data in one\nyear and remove all rows with NA in the table — bind_tables","text":"","code":"# bind_tables(table0007,table0107,table0207, table0307) # bind_tables(table0008,table0108,table0208, table0308)"},{"path":"/reference/fit_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"The function accepts the wrangled Youtube dataset of type dataframe and fits a linear regression\nmodel to the data. — fit_regression","title":"The function accepts the wrangled Youtube dataset of type dataframe and fits a linear regression\nmodel to the data. — fit_regression","text":"function accepts wrangled Youtube dataset type dataframe fits linear regression model data.","code":""},{"path":"/reference/fit_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The function accepts the wrangled Youtube dataset of type dataframe and fits a linear regression\nmodel to the data. — fit_regression","text":"","code":"fit_regression(traindata)"},{"path":"/reference/fit_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The function accepts the wrangled Youtube dataset of type dataframe and fits a linear regression\nmodel to the data. — fit_regression","text":"traindata Typically portion dataset used training regression model","code":""},{"path":"/reference/fit_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The function accepts the wrangled Youtube dataset of type dataframe and fits a linear regression\nmodel to the data. — fit_regression","text":"linear regression model 'views' response variable chosen variables explanatory variables","code":""},{"path":"/reference/fit_regression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The function accepts the wrangled Youtube dataset of type dataframe and fits a linear regression\nmodel to the data. — fit_regression","text":"","code":"# fit_regression(training)"},{"path":"/reference/read_raw_data.html","id":null,"dir":"Reference","previous_headings":"","what":"This function takes in a URL to where the file located in our Github page or\na path to the file saved locally  and read the data — read_raw_data","title":"This function takes in a URL to where the file located in our Github page or\na path to the file saved locally  and read the data — read_raw_data","text":"function takes URL file located Github page path file saved locally  read data","code":""},{"path":"/reference/read_raw_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function takes in a URL to where the file located in our Github page or\na path to the file saved locally  and read the data — read_raw_data","text":"","code":"read_raw_data(path_to_file)"},{"path":"/reference/read_raw_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function takes in a URL to where the file located in our Github page or\na path to the file saved locally  and read the data — read_raw_data","text":"path_to_file path_to_file file located","code":""},{"path":"/reference/read_raw_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function takes in a URL to where the file located in our Github page or\na path to the file saved locally  and read the data — read_raw_data","text":"data frame contains raw data file","code":""},{"path":"/reference/read_raw_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function takes in a URL to where the file located in our Github page or\na path to the file saved locally  and read the data — read_raw_data","text":"","code":"data0007 <- read_raw_data(\"https://raw.githubusercontent.com/DSCI-310/dsci-310-group-13/main/data/0007.txt\") data0107 <- read_raw_data(\"https://raw.githubusercontent.com/DSCI-310/dsci-310-group-13/main/data/0107.txt\") # data0107 <- read_raw_data(\"/home/rstudio/data/0107.txt\")"},{"path":"/reference/read_uncleaned_data.html","id":null,"dir":"Reference","previous_headings":"","what":"This function takes in a path to where the uncleaned data file saved by load.R\nlocated and read the data — read_uncleaned_data","title":"This function takes in a path to where the uncleaned data file saved by load.R\nlocated and read the data — read_uncleaned_data","text":"function takes path uncleaned data file saved load.R located read data","code":""},{"path":"/reference/read_uncleaned_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function takes in a path to where the uncleaned data file saved by load.R\nlocated and read the data — read_uncleaned_data","text":"","code":"read_uncleaned_data(path_to_file)"},{"path":"/reference/read_uncleaned_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function takes in a path to where the uncleaned data file saved by load.R\nlocated and read the data — read_uncleaned_data","text":"path_to_file path file located","code":""},{"path":"/reference/read_uncleaned_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function takes in a path to where the uncleaned data file saved by load.R\nlocated and read the data — read_uncleaned_data","text":"data frame contains uncleaned data saved R/load.R","code":""},{"path":"/reference/read_uncleaned_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function takes in a path to where the uncleaned data file saved by load.R\nlocated and read the data — read_uncleaned_data","text":"","code":"# read_raw_data(\"/home/rstudio/data/data2007_not_cleaned.txt\") # read_raw_data(\"/home/rstudio/data/data2008_not_cleaned.txt\")"},{"path":"/reference/wrangling_data.html","id":null,"dir":"Reference","previous_headings":"","what":"This function takes in a YouTube Data that read from raw data and\nRemove unnecessary data and convert category variable as factor class — wrangling_data","title":"This function takes in a YouTube Data that read from raw data and\nRemove unnecessary data and convert category variable as factor class — wrangling_data","text":"function takes YouTube Data read raw data Remove unnecessary data convert category variable factor class","code":""},{"path":"/reference/wrangling_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function takes in a YouTube Data that read from raw data and\nRemove unnecessary data and convert category variable as factor class — wrangling_data","text":"","code":"wrangling_data(data)"},{"path":"/reference/wrangling_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function takes in a YouTube Data that read from raw data and\nRemove unnecessary data and convert category variable as factor class — wrangling_data","text":"data YouTube data frame reads raw file requires removing unnecessary data converting category variable","code":""},{"path":"/reference/wrangling_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function takes in a YouTube Data that read from raw data and\nRemove unnecessary data and convert category variable as factor class — wrangling_data","text":"YouTube data frame contains \"age\", 'category', 'length','views','rate','ratings','comments' columns; data frame, error message \"Please input valid data frame!\";","code":""},{"path":"/reference/wrangling_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function takes in a YouTube Data that read from raw data and\nRemove unnecessary data and convert category variable as factor class — wrangling_data","text":"","code":"# wrangling_data(data2007_test) # wrangling_data(data2008_test)"}]
